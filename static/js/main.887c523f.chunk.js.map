{"version":3,"sources":["logo.svg","serviceWorker.js","utils.js","Chart.js","StockList/StockList.js","posts/SearchComponent.js","posts/PostList.js","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","parseDate","timeParse","getData","code","url","fetch","then","response","text","data","tsvParse","parse","d","date","open","high","low","close","volume","bbStroke","top","middle","bottom","CandleStickChartWithBollingerBandOverlay","ema20","ema","options","windowSize","sourcePath","skipUndefined","merge","c","accessor","stroke","sma20","sma","ema50","smaVolume50","fill","bb","bollingerBand","this","props","type","initialData","width","ratio","calculatedData","discontinuousTimeScaleProvider","inputDateAccessor","xScaleProvider","xScale","xAccessor","displayXAccessor","xExtents","last","Math","max","length","height","margin","left","right","seriesName","id","yExtents","padding","onContextMenu","rest","console","log","axisAt","orient","ticks","onDoubleClick","at","displayFormat","timeFormat","format","yAccessor","origin","onClick","e","w","h","tickFormat","React","Component","defaultProps","fitWidth","StockList","state","tablePageSize","Stockdata","chartData","selected","done","key","money","setState","fetchAlertData","res","json","status","authStatus","googleToken","gapi","auth2","getAuthInstance","currentUser","get","getAuthResponse","id_token","Chart","columns","Header","Cell","value","minWidth","filterMethod","filter","row","證券代號","toLowerCase","indexOf","證券名稱","style","color","Filter","onChange","event","target","filterable","country","pageSize","showPageSizeOptions","getTdProps","rowInfo","column","instance","handleOriginal","index","original","getTrProps","textDecoration","search","term","x","title","includes","PostList","post","searchHandler","bind","border","map","postDetail","userId","body","require","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.887c523f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { tsvParse, csvParse } from  \"d3-dsv\";\nimport { timeParse } from \"d3-time-format\";\n\nfunction parseData(parse) {\n\treturn function(d) {\n\t\td.date = parse(d.date);\n\t\td.open = +d.open;\n\t\td.high = +d.high;\n\t\td.low = +d.low;\n\t\td.close = +d.close;\n\t\td.volume = +d.volume;\n\n\t\treturn d;\n\t};\n}\nconst parseDate = timeParse(\"%Y-%m-%d\");\nexport function getData({code}) {\n\tlet url = `https://kaishuang1004.github.io/stock_analysis/every_stock/${code}.tsv`;\n\tconst promiseMSFT = fetch(url)\n\t\t.then(response => response.text())\n\t\t.then(data => tsvParse(data, parseData(parseDate)))\n\treturn promiseMSFT;\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { format } from \"d3-format\";\nimport { timeFormat } from \"d3-time-format\";\nimport { ChartCanvas, Chart } from \"react-stockcharts\";\nimport {\n\tCandlestickSeries,\n\tLineSeries,\n\tBollingerSeries,\n\tBarSeries,\n\tAreaSeries,\n} from \"react-stockcharts/lib/series\";\nimport { XAxis, YAxis } from \"react-stockcharts/lib/axes\";\nimport {\n\tCrossHairCursor,\n\tCurrentCoordinate,\n\tMouseCoordinateX,\n\tMouseCoordinateY,\n} from \"react-stockcharts/lib/coordinates\";\nimport { discontinuousTimeScaleProvider } from \"react-stockcharts/lib/scale\";\nimport { OHLCTooltip, MovingAverageTooltip, BollingerBandTooltip } from \"react-stockcharts/lib/tooltip\";\nimport { ema, sma, bollingerBand } from \"react-stockcharts/lib/indicator\";\nimport { fitWidth } from \"react-stockcharts/lib/helper\";\nimport { last } from \"react-stockcharts/lib/utils\";\nconst bbStroke = {\n\ttop: \"#964B00\",\n\tmiddle: \"#000000\",\n\tbottom: \"#964B00\",\n};\nconst bbFill = \"#4682B4\";\n\nclass CandleStickChartWithBollingerBandOverlay extends React.Component {\n\trender() {\n\t\tconst ema20 = ema()\n\t\t\t.options({\n\t\t\t\twindowSize: 20, // optional will default to 10\n\t\t\t\tsourcePath: \"close\", // optional will default to close as the source\n\t\t\t})\n\t\t\t.skipUndefined(true) // defaults to true\n\t\t\t.merge((d, c) => {d.ema20 = c;}) // Required, if not provided, log a error\n\t\t\t.accessor(d => d.ema20) // Required, if not provided, log an error during calculation\n\t\t\t.stroke(\"blue\"); // Optional\n\n\t\tconst sma20 = sma()\n\t\t\t.options({ windowSize: 20 })\n\t\t\t.merge((d, c) => {d.sma20 = c;})\n\t\t\t.accessor(d => d.sma20);\n\n\t\tconst ema50 = ema()\n\t\t\t.options({ windowSize: 50 })\n\t\t\t.merge((d, c) => {d.ema50 = c;})\n\t\t\t.accessor(d => d.ema50);\n\n\t\tconst smaVolume50 = sma()\n\t\t\t.options({ windowSize: 20, sourcePath: \"volume\" })\n\t\t\t.merge((d, c) => {d.smaVolume50 = c;})\n\t\t\t.accessor(d => d.smaVolume50)\n\t\t\t.stroke(\"#4682B4\")\n\t\t\t.fill(\"#4682B4\");\n\n\t\tconst bb = bollingerBand()\n\t\t\t.merge((d, c) => {d.bb = c;})\n\t\t\t.accessor(d => d.bb);\n\n\t\tconst { type, data: initialData, width, ratio } = this.props;\n\n\t\tconst calculatedData = ema20(sma20(ema50(smaVolume50(bb(initialData)))));\n\t\tconst xScaleProvider = discontinuousTimeScaleProvider\n\t\t\t.inputDateAccessor(d => d.date);\n\t\tconst {\n\t\t\tdata,\n\t\t\txScale,\n\t\t\txAccessor,\n\t\t\tdisplayXAccessor,\n\t\t} = xScaleProvider(calculatedData);\n\n\t\tconst start = xAccessor(last(data));\n\t\tconst end = xAccessor(data[Math.max(0, data.length - 150)]);\n\t\tconst xExtents = [start, end];\n\n\t\treturn (\n\t\t\t<ChartCanvas height={400}\n\t\t\t\twidth={width}\n\t\t\t\tratio={ratio}\n\t\t\t\tmargin={{ left: 70, right: 70, top: 10, bottom: 30 }}\n\t\t\t\ttype={type}\n\t\t\t\tseriesName=\"MSFT\"\n\t\t\t\tdata={data}\n\t\t\t\txScale={xScale}\n\t\t\t\txAccessor={xAccessor}\n\t\t\t\tdisplayXAccessor={displayXAccessor}\n\t\t\t\txExtents={xExtents}\n\t\t\t>\n\t\t\t\t<Chart id={1}\n\t\t\t\t\tyExtents={[d => [d.high, d.low], sma20.accessor(), ema20.accessor(), ema50.accessor(), bb.accessor()]}\n\t\t\t\t\tpadding={{ top: 10, bottom: 20 }}\n\t\t\t\t\tonContextMenu={(...rest) => { console.log(\"chart - context menu\", rest); }}\n\t\t\t\t>\n\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\"/>\n\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" ticks={5}\n\t\t\t\t\t\tonDoubleClick={(...rest) => { console.log(\"yAxis - double click\", rest); }}\n\t\t\t\t\t\tonContextMenu={(...rest) => { console.log(\"yAxis - context menu\", rest); }}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<MouseCoordinateX\n\t\t\t\t\t\tat=\"bottom\"\n\t\t\t\t\t\torient=\"bottom\"\n\t\t\t\t\t\tdisplayFormat={timeFormat(\"%Y-%m-%d\")} />\n\t\t\t\t\t<MouseCoordinateY\n\t\t\t\t\t\tat=\"right\"\n\t\t\t\t\t\torient=\"right\"\n\t\t\t\t\t\tdisplayFormat={format(\".2f\")} />\n\n\t\t\t\t\t<CandlestickSeries />\n\t\t\t\t\t<BollingerSeries yAccessor={d => d.bb}\n\t\t\t\t\t\tstroke={bbStroke}\n\t\t\t\t\t\tfill={bbFill} />\n\n\t\t\t\t\t<LineSeries yAccessor={sma20.accessor()} stroke={sma20.stroke()}/>\n\t\t\t\t\t<LineSeries yAccessor={ema20.accessor()} stroke={ema20.stroke()}/>\n\t\t\t\t\t<LineSeries yAccessor={ema50.accessor()} stroke={ema50.stroke()}/>\n\t\t\t\t\t<CurrentCoordinate yAccessor={sma20.accessor()} fill={sma20.stroke()} />\n\t\t\t\t\t<CurrentCoordinate yAccessor={ema20.accessor()} fill={ema20.stroke()} />\n\t\t\t\t\t<CurrentCoordinate yAccessor={ema50.accessor()} fill={ema50.stroke()} />\n\n\t\t\t\t\t<OHLCTooltip origin={[-40, 0]}/>\n\n\t\t\t\t\t<MovingAverageTooltip\n\t\t\t\t\t\tonClick={e => console.log(e)}\n\t\t\t\t\t\torigin={[-38, 15]}\n\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tyAccessor: sma20.accessor(),\n\t\t\t\t\t\t\t\ttype: sma20.type(),\n\t\t\t\t\t\t\t\tstroke: sma20.stroke(),\n\t\t\t\t\t\t\t\twindowSize: sma20.options().windowSize,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tyAccessor: ema20.accessor(),\n\t\t\t\t\t\t\t\ttype: ema20.type(),\n\t\t\t\t\t\t\t\tstroke: ema20.stroke(),\n\t\t\t\t\t\t\t\twindowSize: ema20.options().windowSize,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tyAccessor: ema50.accessor(),\n\t\t\t\t\t\t\t\ttype: ema50.type(),\n\t\t\t\t\t\t\t\tstroke: ema50.stroke(),\n\t\t\t\t\t\t\t\twindowSize: ema50.options().windowSize,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t\t<BollingerBandTooltip\n\t\t\t\t\t\torigin={[-38, 60]}\n\t\t\t\t\t\tyAccessor={d => d.bb}\n\t\t\t\t\t\toptions={bb.options()} />\n\t\t\t\t</Chart>\n\t\t\t\t<Chart id={2}\n\t\t\t\t\tyExtents={[d => d.volume, smaVolume50.accessor()]}\n\t\t\t\t\theight={50} origin={(w, h) => [0, h - 50]}\n\t\t\t\t>\n\t\t\t\t\t<YAxis axisAt=\"left\" orient=\"left\" ticks={5} tickFormat={format(\".2s\")}/>\n\n\t\t\t\t\t<MouseCoordinateY\n\t\t\t\t\t\tat=\"left\"\n\t\t\t\t\t\torient=\"left\"\n\t\t\t\t\t\tdisplayFormat={format(\".4s\")} />\n\n\t\t\t\t\t<BarSeries yAccessor={d => d.volume} fill={d => d.close < d.open ? \"#6BA583\" : \"#FF0000\" } />\n\t\t\t\t\t<AreaSeries yAccessor={smaVolume50.accessor()} stroke={smaVolume50.stroke()} fill={smaVolume50.fill()}/>\n\t\t\t\t\t<CurrentCoordinate yAccessor={smaVolume50.accessor()} fill={smaVolume50.stroke()} />\n\t\t\t\t\t<CurrentCoordinate yAccessor={d => d.volume} fill=\"#9B0A47\" />\n\t\t\t\t</Chart>\n\t\t\t\t<CrossHairCursor />\n\t\t\t</ChartCanvas>\n\t\t);\n\t}\n}\n\nCandleStickChartWithBollingerBandOverlay.propTypes = {\n\tdata: PropTypes.array.isRequired,\n\twidth: PropTypes.number.isRequired,\n\tratio: PropTypes.number.isRequired,\n\ttype: PropTypes.oneOf([\"svg\", \"hybrid\"]).isRequired,\n};\n\nCandleStickChartWithBollingerBandOverlay.defaultProps = {\n\ttype: \"svg\",\n};\nCandleStickChartWithBollingerBandOverlay = fitWidth(CandleStickChartWithBollingerBandOverlay);\n\nexport default CandleStickChartWithBollingerBandOverlay;\n","import React, { Component } from \"react\";\nimport { TypeChooser } from \"react-stockcharts/lib/helper\";\nimport { getData } from \"../utils\"\nimport Chart from '../Chart';\n\n// Import React Table\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nclass StockList extends Component {\n  constructor() {\n    super();\n    this.state = {\n      code: 1101,\n      tablePageSize: 6,\n      Stockdata: [], \n      data:null,\n      chartData: [],\n      selected: -1,\n      done: []\n    };\n  }\n  toggleLine(key) {\n    const { money } = this.state\n    money[key] = !money[key];\n    this.setState({\n      money: money\n    })\n  }\n  componentDidMount() {\n    getData({code: this.state.code}).then(data => {\n\t\t\tthis.setState({ data: data })\n    })\n    this.fetchAlertData();\n  }\n  fetchAlertData() {\n    fetch(`https://kaishuang1004.github.io/stock_analysis/file.json`)\n      .then(res => res.json())\n      .then(data => {\n        if (data.status === false && data.authStatus === false) {\n          window.googleToken = window.gapi.auth2.getAuthInstance().currentUser.get().getAuthResponse().id_token;\n          this.fetchAlertData();\n          return;\n        }\n        this.setState({\n          Stockdata: data\n        });\n      });\n  }\n  render() {\n    const { Stockdata, data, tablePageSize, selected } = this.state;\n    if (this.state.data == null) {\n\t\t\treturn <div>Loading...</div>\n    }\n    return (\n      <div>\n        <TypeChooser>\n           {type => <Chart type={type} data={data} />}\n        </TypeChooser>  \n        <ReactTable\n          data={Stockdata}\n          columns={[\n            {\n              Header: '證券代號',\n              columns: [{\n                Header: '證券代號',\n                id: '證券代號',\n                accessor: '證券代號',\n                Cell: props => <span>{props.value}</span>,\n                minWidth: 20,\n                filterMethod: (filter, row) => {\n                  console.log(row, filter)\n                  return row.證券代號.toLowerCase().indexOf(filter.value.toLowerCase()) !== -1;\n                },\n              }],\n            },\n            {\n              Header: '證券名稱',\n              columns: [{\n                id: '證券名稱',\n                Header: '證券名稱',\n                accessor: '證券名稱',\n                Cell: props => <span>{props.value}</span>,\n                filterMethod: (filter, row) => {\n                  console.log(row, filter)\n                  return row.證券名稱.toLowerCase().indexOf(filter.value.toLowerCase()) !== -1;\n                },\n                minWidth: 30\n              }]\n            },\n            {\n              Header: '漲跌',\n              columns: [{\n                id: '漲跌(+/-)',\n                Header: props => <span style={{ color: '#bf3d31' }}>漲跌(+/-)</span>,\n                accessor: '漲跌(+/-)',\n                Cell: props => <span>{props.value}</span>,\n                filterMethod: (filter, row) => {\n                  if (filter.value === \"all\") {\n                    return true;\n                  }\n                  return row[filter.id] === filter.value;\n                },\n                Filter: ({ filter, onChange }) =>\n                  <select\n                    onChange={event => onChange(event.target.value)}\n                    style={{ width: \"100%\" }}\n                    value={filter ? filter.value : \"all\"}\n                  >\n                    <option value=\"all\">顯示全部</option>\n                    <option value=\"+\">+</option>\n                    <option value=\"-\">-</option>\n                  </select>,\n                minWidth: 30\n              }, {\n                id: '漲跌價差',\n                Header: props => <span style={{ color: '#3b5998' }}>漲跌價差</span>,\n                accessor: '漲跌價差',\n                filterable: false,\n                Cell: props => <span>{props.value}</span>,\n                minWidth: 30\n              }]\n            },\n            {\n              Header: '成交',\n              columns: [{\n                id: '成交股數',\n                Header: props => <span style={{ color: '#bf3d31' }}>成交股數</span>,\n                accessor: '成交股數',\n                Cell: props => <span>{props.value}</span>,\n                filterMethod: (filter, row) => {\n                  if (filter.value === \"all\") {\n                    return true;\n                  }\n                  return row[filter.id] === filter.value;\n                },\n                Filter: ({ filter, onChange }) =>\n                  <select\n                    onChange={event => onChange(event.target.value)}\n                    style={{ width: \"100%\" }}\n                    value={filter ? filter.value : \"all\"}\n                  >\n                    <option value=\"all\">顯示全部</option>\n                    <option value=\"+\">+</option>\n                    <option value=\"-\">-</option>\n                  </select>,\n                minWidth: 30\n              }, {\n                id: '成交金額',\n                Header: props => <span style={{ color: '#3b5998' }}>成交金額</span>,\n                accessor: '成交金額',\n                filterable: false,\n                Cell: props => <span>{props.value}</span>,\n                minWidth: 30\n              }]\n            },\n            {\n              Header: '金額',\n              columns: [{\n                id: '開盤價',\n                Header: props => <span style={{ color: '#bf3d31' }}>開盤價</span>,\n                accessor: '開盤價',\n                filterable: false,\n                Cell: props => <span>{props.value}</span>,\n                minWidth: 30\n              }, {\n                id: '收盤價',\n                Header: props => <span style={{ color: '#3b5998' }}>收盤價</span>,\n                accessor: '收盤價',\n                filterable: false,\n                Cell: props => <span>{props.value}</span>,\n                minWidth: 30\n              }, \n              {\n                id: 'flurry',\n                Header: props => <span style={{ color: '#82ca9d' }}>最高價</span>,\n                accessor: '最高價',\n                filterable: false,\n                Cell: props => <span>{props.value}</span>,\n                minWidth: 30\n              },\n              {\n                id: 'low',\n                Header: props => <span style={{ color: '#82ca9d' }}>最低價</span>,\n                accessor: '最低價',\n                filterable: false,\n                Cell: props => <span>{props.value}</span>,\n                minWidth: 30\n              }]\n            },\n            {\n              Header: '本益比',\n              columns: [{\n                id: '本益比',\n                Header: '本益比',\n                accessor: '本益比',\n                Cell: props => <span>{props.value}</span>,\n                filterMethod: (filter, row) => {\n                  return row[filter.id].country.toLowerCase().indexOf(filter.value.toLowerCase()) !== -1;\n                },\n                minWidth: 30\n              }]\n            },\n          ]}\n          pageSize={tablePageSize}\n          showPageSizeOptions={false}\n          filterable={true}\n          getTdProps={(state, rowInfo, column, instance) => {\n            return {\n              onClick: (e, handleOriginal) => {\n                if (column.Header === '' || selected === rowInfo.index) {\n                  return;\n                }\n                getData({code: rowInfo.original.證券代號}).then(data => {\n                  this.setState({ data: data })\n                })\n              }\n            }\n          }}\n          getTrProps={(state, rowInfo, column) => {\n            return {\n              style: {\n                textDecoration: rowInfo && this.state.done.indexOf(rowInfo.index) !== -1 ? 'line-through' : 'none',\n                color: rowInfo && rowInfo.index === selected ? '#4285f4' : '#000',\n              }\n            }\n          }}\n        />\n      </div>\n    );\n  }\n}\nexport default StockList;","import React, { Component } from 'react';\r\n\r\nfunction search(term){\r\n    return function(x){\r\n      return x.title.toLowerCase().includes(term.toLowerCase()) || !term;   //The includes() method determines whether a string contains the characters of a specified string.\r\n   \r\n        \r\n    }\r\n}\r\n\r\nexport default search;","import React, { Component } from 'react';\r\nimport post from '../data/post.json';\r\nimport search from './SearchComponent';\r\n\r\nclass PostList extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            post:post,\r\n            term:''\r\n        }\r\n        this.searchHandler = this.searchHandler.bind(this);\r\n    }\r\n\r\n    searchHandler(event){\r\n        this.setState({term : event.target.value})  //outputs watever the input is inputted\r\n    }\r\n\r\n    render() {\r\n        const{term, post} = this.state;  //destructuring\r\n        return(\r\n            <div>\r\n                <form>\r\n                    <input type = \"text\" onChange = {this.searchHandler} value = {term}/>\r\n                </form>\r\n                <h1>Hello, here is the JSON Data</h1>\r\n                <div>\r\n                               <table border =\"1\">\r\n                                   <tr>\r\n                                       <th>userId</th>\r\n                                       <th>id</th>\r\n                                       <th>Title</th>\r\n                                       <th>Body</th>\r\n                                   </tr>\r\n\r\n                {/* {this.state.post.filter(search(this.state.term)).map((postDetail) =>{ */}\r\n                {post.filter(search(this.state.term)).map((postDetail) =>{\r\n                    return(\r\n                        \r\n                           <tr>\r\n                               <td>{postDetail.userId}</td>\r\n                               <td>{postDetail.id}</td>\r\n                               <td>{postDetail.title}</td>\r\n                               <td>{postDetail.body}</td>\r\n                           </tr>\r\n                              \r\n                            \r\n                    )\r\n                })}\r\n                 </table>\r\n                               </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PostList;\r\n\r\n","import React, {Component} from 'react';\nimport PostList from './posts/PostList';\nimport logo from './logo.svg';\nimport './App.css';\nimport search from './posts/SearchComponent';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n      {/* <form>\n        <input type = \"text\"/>\n      </form> */}\n      <PostList/>\n    </div>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport StockList from './StockList/StockList';\nimport App from './App';\n\n\nconst JsonTable = require('ts-react-json-table');\n// var items = [\n// \t{\"id\": 75950,\"name\": \"Louella Wallace\",\"age\": 24,\"phone\": \"+44 (0)203 437 7302\",\"color\": \"green\"},\n// \t{\"id\": 80616,\"name\": \"Hanson Perry\",\"age\": 36,\"phone\": \"+44 (0)203 279 3708\",\"color\": \"brown\"},\n// \t{\"id\": 77621,\"name\": \"Brandi Long\",\"age\": 20,\"phone\": \"+44 (0)203 319 4880\",\"color\": \"gray\"},\n// \t{\"id\": 81299,\"name\": \"Tonia Sykes\",\"age\": 38,\"phone\": \"+44 (0)208 328 3671\",\"color\": \"blue\"},\n// \t{\"id\": 14225,\"name\": \"Leach Durham\",\"age\": 23,\"phone\": \"+44 (0)208 280 9572\",\"color\": \"green\"}\n//   ];\n  \nlet admins = require('./file.json');\n// console.log(admins);\n\nReactDOM.render(<StockList />, document.getElementById('root'));\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n// ReactDOM.render(<StockList />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}