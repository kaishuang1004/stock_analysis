{"version":3,"sources":["logo.svg","serviceWorker.js","components/pagecomponent.js","containers/pagecontainer.js","posts/SearchComponent.js","posts/PostList.js","App.js","StockList/StockList.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Pagecomponent","props","state","currentPage","groupCount","startPage","totalPage","createPage","bind","this","setState","pageConfig","pageCallbackFn","pages","push","className","onClick","prePageHandeler","key","i","pageClick","pageLength","nextPageHandeler","getCurrentPage","pageList","Component","JsonTable","require","search","term","x","title","toLowerCase","includes","PostList","post","searchHandler","event","target","value","type","onChange","border","filter","map","postDetail","userId","id","body","StockList","timeRange","country","coutryFlag","networks","facebook","flurry","admob","marketPlace","platform","adType","chartType","alertData","chartData","selected","done","predictValue","fittedvalues","fan","marketplace","fetchAlertData","fetch","googleToken","then","res","json","data","status","authStatus","gapi","auth2","getAuthInstance","currentUser","get","getAuthResponse","id_token","style","display","flexDirection","maxHeight","innerHeight","hideTable","width","height","showPagination","showPageSizeOptions","columns","Header","accessor","acc","exchange_alert","Cell","color","fontSize","minWidth","filterMethod","row","Filter","cursor","href","mopub_link","toUpperCase","indexOf","d","network","filterable","highlight","reason","show","prime_data","suggest_data","toFixed","gap","pageSize","length","defaultPageSize","sortable","getTdProps","rowInfo","column","instance","e","handleOriginal","index","fetchChartData","original","unit","eCPM","undefined","getTrProps","textDecoration","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4gxBAAAA,EAAOC,QAAU,IAA0B,kC,uGCYvBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,8CCmHSC,G,kBAjIX,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,YAAa,EACbC,WAAY,EACZC,UAAW,EACXC,UAAU,GAEd,EAAKC,WAAa,EAAKA,WAAWC,KAAhB,gBARH,E,iFAYfC,KAAKC,SAAS,CACVJ,UAAWG,KAAKR,MAAMU,WAAWL,YAErCG,KAAKR,MAAMW,eAAeH,KAAKP,MAAMC,e,mCAG5B,MAE8CM,KAAKP,MAArDC,EAFE,EAEFA,YAAaC,EAFX,EAEWA,WAAYC,EAFvB,EAEuBA,UAAUC,EAFjC,EAEiCA,UACtCO,EAAQ,GAMZ,GAJAA,EAAMC,KAAK,wBAAIC,UAA2B,IAAhBZ,EAAoB,SAAW,KAAMa,QAASP,KAAKQ,gBAAgBT,KAAKC,MACnFS,IAAK,GADT,uBAIPZ,GAAa,GAEb,IAAK,IAAIa,EAAI,EAAGA,GAAKb,EAAWa,IAC5BN,EAAMC,KAAK,wBAAII,IAAKC,EAAGH,QAASP,KAAKW,UAAUZ,KAAKC,KAAMU,GAC3CJ,UAAWZ,IAAgBgB,EAAI,aAAe,MAAOA,QAErE,CAIHN,EAAMC,KAAK,wBAAIC,UAA2B,IAAhBZ,EAAoB,aAAe,KAAMe,IAAK,EACzDF,QAASP,KAAKW,UAAUZ,KAAKC,KAAM,IADvC,MAGX,IAAIY,EAAa,EAEbA,EADAjB,EAAaC,EAAYC,EACZA,EAEAF,EAAaC,EAG1BF,GAAeC,GACfS,EAAMC,KAAK,wBAAIC,UAAU,GAAGG,KAAM,GAAvB,iBAGf,IAAK,IAAIC,EAAId,EAAWc,EAAIE,EAAYF,IAChCA,GAAKb,EAAY,GAAKa,EAAI,GAC1BN,EAAMC,KAAK,wBAAIC,UAAWZ,IAAgBgB,EAAI,aAAe,KAAMD,IAAKC,EACzDH,QAASP,KAAKW,UAAUZ,KAAKC,KAAMU,IAAKA,IAI3Db,EAAYD,GAAaD,EAAa,GACtCS,EAAMC,KAAK,wBAAIC,UAAU,GAAGG,KAAM,GAAvB,iBAGfL,EAAMC,KAAK,wBAAIC,UAAWZ,IAAgBG,EAAY,aAAe,KAAMY,IAAKZ,EACjEU,QAASP,KAAKW,UAAUZ,KAAKC,KAAMH,IAAaA,IAMnE,OAHAO,EAAMC,KAAK,wBAAIC,UAAWZ,IAAgBG,EAAY,SAAW,KAClDU,QAASP,KAAKa,iBAAiBd,KAAKC,MACpCS,IAAKZ,EAAY,GAFrB,uBAGJO,I,gCAKDV,GAAc,IACbC,EAAcK,KAAKP,MAAnBE,WACDmB,EAAiBd,KAAKR,MAAMW,eAE9BT,GAAeC,GACfK,KAAKC,SAAS,CACVL,UAAWF,EAAc,IAG7BA,EAAcC,GACdK,KAAKC,SAAS,CACVL,UAAW,IAIC,IAAhBF,GACAM,KAAKC,SAAS,CACVL,UAAW,IAGnBI,KAAKC,SAAS,CACVP,gBAGJoB,EAAepB,K,wCAIA,IACVA,EAAeM,KAAKP,MAApBC,YACL,GAAsB,MAAhBA,EACF,OAAO,EAEXM,KAAKW,UAAUjB,K,yCAIC,IAAD,EACeM,KAAKP,MAA9BC,EADU,EACVA,YAEL,KAAMA,EAHS,EACEG,UAGb,OAAO,EAEXG,KAAKW,UAAUjB,K,+BAGf,IAAMqB,EAAWf,KAAKF,aACtB,OACI,wBAAIQ,UAAU,kBACTS,O,GA5HWC,c,eCKtBC,EAAYC,EAAQ,I,GAEEF,Y,OCAbG,MARf,SAAgBC,GACZ,OAAO,SAASC,GACd,OAAOA,EAAEC,MAAMC,cAAcC,SAASJ,EAAKG,iBAAmBH,ICoDrDK,E,YAnDX,WAAYjC,GAAO,IAAD,8BACd,4CAAMA,KACDC,MAAQ,CACTiC,KAAKA,EACLN,KAAK,IAET,EAAKO,cAAgB,EAAKA,cAAc5B,KAAnB,gBANP,E,2EASJ6B,GACV5B,KAAKC,SAAS,CAACmB,KAAOQ,EAAMC,OAAOC,U,+BAG7B,IAAD,EACe9B,KAAKP,MAAnB2B,EADD,EACCA,KAAMM,EADP,EACOA,KACZ,OACI,6BACI,8BACI,2BAAOK,KAAO,OAAOC,SAAYhC,KAAK2B,cAAeG,MAASV,KAElE,4DACA,6BACe,2BAAOa,OAAQ,KACX,4BACI,sCACA,kCACA,qCACA,qCAItBP,EAAKQ,OAAOf,EAAOnB,KAAKP,MAAM2B,OAAOe,KAAI,SAACC,GACvC,OAEO,4BACI,4BAAKA,EAAWC,QAChB,4BAAKD,EAAWE,IAChB,4BAAKF,EAAWd,OAChB,4BAAKc,EAAWG,iB,GAvCxBvB,a,eCELA,Y,uBC+XHwB,E,YA/Xb,aAAe,IAAD,8BACZ,+CACK/C,MAAQ,CACXgD,UAAW,GACXC,QAAS,GACTC,WAAY,GACZC,SAAU,CACRC,UAAU,EACVC,QAAQ,EACRC,OAAO,EACPC,aAAa,GAEfC,SAAU,GACVC,OAAQ,GACRC,UAAW,cACXC,UAAW,GACXC,UAAW,GACXC,UAAW,EACXC,KAAM,GACNC,aAAc,CACZT,MAAO,CACLU,aAAc,GAEhBC,IAAK,CACHD,aAAc,GAEhBX,OAAQ,CACNW,aAAc,GAEhBE,YAAa,CACXF,aAAc,KA9BR,E,iFAsCZzD,KAAK4D,mB,uCAGW,IAAD,OACfC,MAAM,yDAAD,OAA0D1E,OAAO2E,cACnEC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJ,IAAoB,IAAhBA,EAAKC,SAAwC,IAApBD,EAAKE,WAGhC,OAFAjF,OAAO2E,YAAc3E,OAAOkF,KAAKC,MAAMC,kBAAkBC,YAAYC,MAAMC,kBAAkBC,cAC7F,EAAKf,iBAGP,EAAK3D,SAAS,CACZmD,UAAWc,S,iCAqDRzD,GAAM,IACPmC,EAAa5C,KAAKP,MAAlBmD,SACRA,EAASnC,IAAQmC,EAASnC,GAC1BT,KAAKC,SAAS,CACZ2C,SAAUA,M,+BAIJ,IAAD,SACwE5C,KAAKP,MAA5E2D,EADD,EACCA,UAAsBX,GADvB,EACYY,UADZ,EACuBZ,WAAsBa,GAD7C,EACkCH,UADlC,EAC6CG,UAD7C,EACuDE,aA4B9D,OACE,yBACElD,UAAU,cACVsE,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,UAAgC,GAArB5F,OAAO6F,eAmBjBhF,KAAKR,MAAMyF,WACV,yBAAK3E,UAAU,sBACb,kBAAC,IAAD,CACEsE,MAAO,CACLM,MAAO,MACPC,OAAQ,SAEVC,gBAAgB,EAChBC,qBAAqB,EACrBnB,KAAI,YAAMd,GACVkC,QAAS,CACP,CACEC,OAAQ,GACRD,QAAS,CAAC,CACRC,OAAQ,GACRjD,GAAI,iBACJkD,SAAU,SAAAC,GAAG,OAAIA,EAAIC,gBACrBC,KAAM,SAAAnG,GAAK,OAAI,8BAAOA,EAAMsC,OAAS,uBAAGxB,UAAU,iBAAiBsE,MAAO,CAAEgB,MAAO,UAAWC,SAAU,SAAnE,mBACrCC,SAAU,GACVC,aAAc,SAAC7D,EAAQ8D,GACrB,QAAI9D,EAAOJ,OAGJkE,EAAI9D,EAAOI,KAEpB2D,OAAQ,YAA2B,IAAxB/D,EAAuB,EAAvBA,OAAQF,EAAe,EAAfA,SACjB,OAAKE,EAGIA,EAAOJ,MAAQ,uBAAGxB,UAAU,iBAAiBC,QAAS,SAAAqB,GAAK,OAAII,GAAS,IAAQ4C,MAAO,CAAEsB,OAAQ,UAAWL,SAAU,SAAvG,eAAoI,uBAAGvF,UAAU,iBAAiBsE,MAAO,CAAEgB,MAAO,UAAWM,OAAQ,UAAWL,SAAU,QAAUtF,QAAS,SAAAqB,GAAK,OAAII,GAAS,KAA3H,QAFnJ,uBAAG1B,UAAU,iBAAiBC,QAAS,SAAAqB,GAAK,OAAII,GAAS,IAAQ4C,MAAO,CAAEsB,OAAQ,UAAWL,SAAU,SAAvG,mBAOf,CACEN,OAAQ,UACRD,QAAS,CAAC,CACRhD,GAAI,UACJiD,OAAQ,UACRC,SAAU,SAAAC,GAAG,OAAIA,GACjBE,KAAM,SAAAnG,GAAK,OAAI,8BAAO,EAAKC,MAAMkD,WAAWnD,EAAMsC,MAAMY,SAAzC,IAAmD,uBAAGyD,KAAM3G,EAAMsC,MAAMsE,WAAYvE,OAAO,SAASrC,EAAMsC,MAAMY,QAAQ2D,iBACvIN,aAAc,SAAC7D,EAAQ8D,GACrB,OAAqF,IAA9EA,EAAI9D,EAAOI,IAAII,QAAQnB,cAAc+E,QAAQpE,EAAOJ,MAAMP,gBAEnEuE,SAAU,MAGd,CACEP,OAAQ,WACRD,QAAS,CAAC,CACRC,OAAQ,WACRC,SAAU,WACVG,KAAM,SAAAnG,GAAK,OAAI,8BAAOA,EAAMsC,MAAMuE,gBAClCN,aAAc,SAAC7D,EAAQ8D,GACrB,MAAqB,QAAjB9D,EAAOJ,OAGJkE,EAAI9D,EAAOI,MAAQJ,EAAOJ,OAEnCmE,OAAQ,gBAAG/D,EAAH,EAAGA,OAAQF,EAAX,EAAWA,SAAX,OACN,4BACEA,SAAU,SAAAJ,GAAK,OAAII,EAASJ,EAAMC,OAAOC,QACzC8C,MAAO,CAAEM,MAAO,QAChBpD,MAAOI,EAASA,EAAOJ,MAAQ,OAE/B,4BAAQA,MAAM,OAAd,YACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,OAAd,SAEJgE,SAAU,MAGd,CACEP,OAAQ,OACRD,QAAS,CAAC,CACRC,OAAQ,OACRC,SAAU,OACVG,KAAM,SAAAnG,GAAK,OAAI,8BAAO,EAAKC,MAAMkD,WAAWnD,EAAMsC,OAAnC,IAA4CtC,EAAMsC,MAAMuE,gBACvEN,aAAc,SAAC7D,EAAQ8D,GACrB,MAAqB,QAAjB9D,EAAOJ,OAGJkE,EAAI9D,EAAOI,MAAQJ,EAAOJ,OAEnCmE,OAAQ,gBAAG/D,EAAH,EAAGA,OAAQF,EAAX,EAAWA,SAAX,OACN,4BACEA,SAAU,SAAAJ,GAAK,OAAII,EAASJ,EAAMC,OAAOC,QACzC8C,MAAO,CAAEM,MAAO,QAChBpD,MAAOI,EAASA,EAAOJ,MAAQ,OAE/B,4BAAQA,MAAM,OAAd,YACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,iBAAd,iBACA,4BAAQA,MAAM,oBAAd,oBACA,4BAAQA,MAAM,aAAd,aACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,QAAd,UAEJgE,SAAU,MAGd,CACEP,OAAQ,WACRD,QAAS,CAAC,CACRhD,GAAI,QACJiD,OAAQ,SAAA/F,GAAK,OAAI,0BAAMoF,MAAO,CAAEgB,MAAO,YAAtB,UACjBJ,SAAU,SAAAe,GAAC,OAAIA,EAAEC,QAAQzD,OACzB0D,YAAY,EACZd,KAAM,SAAAnG,GAAK,OACT,0BACE8B,MAAO9B,EAAMsC,OAAStC,EAAMsC,MAAM4E,UAAYlH,EAAMsC,MAAM6E,OAAS,GACnE/B,MAAO,CACL3C,OAAQzC,EAAMsC,OAAStC,EAAMsC,MAAM4E,UAAY,oBAAsB,SAGtElH,EAAMsC,OAAStC,EAAMsC,MAAM8E,KAA3B,WAAsCpH,EAAMsC,MAAM+E,WAAlD,gBAAoErH,EAAMsC,MAAMgF,aAAaC,QAAQ,GAArG,aAA4GvH,EAAMsC,MAAMkF,KAAO,EAAI,IAAMxH,EAAMsC,MAAMkF,IAAID,QAAQ,GAAKvH,EAAMsC,MAAMkF,IAAID,QAAQ,GAA9L,KAAsM,OAG1M,CACDzE,GAAI,WACJiD,OAAQ,SAAA/F,GAAK,OAAI,0BAAMoF,MAAO,CAAEgB,MAAO,YAAtB,aACjBJ,SAAU,SAAAe,GAAC,OAAIA,EAAEC,QAAQ9C,KACzB+C,YAAY,EACZd,KAAM,SAAAnG,GAAK,OACT,0BACE8B,MAAO9B,EAAMsC,OAAStC,EAAMsC,MAAM4E,UAAYlH,EAAMsC,MAAM6E,OAAS,GACnE/B,MAAO,CACL3C,OAAQzC,EAAMsC,OAAStC,EAAMsC,MAAM4E,UAAY,oBAAsB,SAGtElH,EAAMsC,OAAStC,EAAMsC,MAAM8E,KAA3B,WAAsCpH,EAAMsC,MAAM+E,WAAlD,gBAAoErH,EAAMsC,MAAMgF,aAAaC,QAAQ,GAArG,aAA4GvH,EAAMsC,MAAMkF,KAAO,EAAI,IAAMxH,EAAMsC,MAAMkF,IAAID,QAAQ,GAAKvH,EAAMsC,MAAMkF,IAAID,QAAQ,GAA9L,KAAsM,OAG1M,CACDzE,GAAI,SACJiD,OAAQ,SAAA/F,GAAK,OAAI,0BAAMoF,MAAO,CAAEgB,MAAO,YAAtB,WACjBJ,SAAU,SAAAe,GAAC,OAAIA,EAAEC,QAAQ1D,QACzB2D,YAAY,EACZd,KAAM,SAAAnG,GAAK,OACT,0BACE8B,MAAO9B,EAAMsC,OAAStC,EAAMsC,MAAM4E,UAAYlH,EAAMsC,MAAM6E,OAAS,GACnE/B,MAAO,CACL3C,OAAQzC,EAAMsC,OAAStC,EAAMsC,MAAM4E,UAAY,oBAAsB,SAGtElH,EAAMsC,OAAStC,EAAMsC,MAAM8E,KAA3B,WAAsCpH,EAAMsC,MAAM+E,WAAlD,gBAAoErH,EAAMsC,MAAMgF,aAAaC,QAAQ,GAArG,aAA4GvH,EAAMsC,MAAMkF,KAAO,EAAI,IAAMxH,EAAMsC,MAAMkF,IAAID,QAAQ,GAAKvH,EAAMsC,MAAMkF,IAAID,QAAQ,GAA9L,KAAsM,SAK/M,CACExB,OAAQ,gBACRD,QAAS,CAAC,CACRC,OAAQ,gBACRC,SAAU,gBACVG,KAAM,SAAAnG,GAAK,OAAI,8BAAOA,EAAMsC,OAAS,MACrCgE,SAAU,GACVW,YAAY,MAIlBnG,UAAU,sBACV2G,SAAU,YAAI7D,GAAW8D,OACzBC,gBAAiB,GACjBC,UAAU,EACVX,YAAY,EACZY,WAAY,SAAC5H,EAAO6H,EAASC,EAAQC,GACnC,MAAO,CACLjH,QAAS,SAACkH,EAAGC,GACW,KAAlBH,EAAOhC,QAAiBjC,IAAagE,EAAQK,OAGjD,EAAKC,eAAe,CAClBlF,QAAS4E,EAAQO,SAASnF,QAC1BO,SAAUqE,EAAQO,SAAS5E,SAC3BC,OAAQoE,EAAQO,SAASC,KACzBrF,UAAWA,EACXa,SAAUgE,EAAQK,MAClBnE,aAAc,CACZT,MAAO,CACLgF,UAAMC,EACNvE,aAAc6D,EAAQO,SAASrB,QAAQzD,MAAQuE,EAAQO,SAASrB,QAAQzD,MAAM+D,kBAAekB,GAE/FtE,IAAK,CACHqE,UAAMC,EACNvE,aAAc6D,EAAQO,SAASrB,QAAQ9C,IAAM4D,EAAQO,SAASrB,QAAQ9C,IAAIoD,kBAAekB,GAE3FlF,OAAQ,CACNiF,UAAMC,EACNvE,aAAc6D,EAAQO,SAASrB,QAAQ1D,OAASwE,EAAQO,SAASrB,QAAQ1D,OAAOgE,kBAAekB,GAEjGrE,YAAa,CACXoE,UAAMC,EACNvE,aAAc6D,EAAQO,SAASrB,QAAQ7C,YAAc2D,EAAQO,SAASrB,QAAQ7C,YAAYmD,kBAAekB,SAOrHC,WAAY,SAACxI,EAAO6H,EAASC,GAC3B,MAAO,CACL3C,MAAO,CACLsD,eAAgBZ,IAAuD,IAA5C,EAAK7H,MAAM8D,KAAK+C,QAAQgB,EAAQK,OAAgB,eAAiB,OAC5F/B,MAAO0B,GAAWA,EAAQK,QAAUrE,EAAW,UAAY,kB,GApXzDtC,aCINE,EAAQ,IASbA,EAAQ,GAMrBiH,IAASC,OAAO,kBAAC,EAAD,MAAeC,SAASC,eAAe,SP2GjD,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM1E,MAAK,SAAA2E,GACjCA,EAAaC,iB","file":"static/js/main.c71b30a6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {Component} from 'react'\nimport './pagecomponent.css'\n\nclass Pagecomponent extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            currentPage: 1, //当前页码\n            groupCount: 5, //页码分组，显示7个页码，其余用省略号显示\n            startPage: 1,  //分组开始页码\n            totalPage:1 //总页数\n        }\n        this.createPage = this.createPage.bind(this)\n    }\n\n    componentDidMount() {\n        this.setState({\n            totalPage: this.props.pageConfig.totalPage\n        })\n        this.props.pageCallbackFn(this.state.currentPage)\n    }\n\n    createPage() {\n        //const {totalPage} = this.props.pageConfig;\n        const {currentPage, groupCount, startPage,totalPage} = this.state;\n        let pages = []\n        //上一页\n        pages.push(<li className={currentPage === 1 ? \"nomore\" : null} onClick={this.prePageHandeler.bind(this)}\n                       key={0}>\n            上一页</li>)\n\n        if (totalPage <= 10) {\n            /*总页码小于等于10时，全部显示出来*/\n            for (let i = 1; i <= totalPage; i++) {\n                pages.push(<li key={i} onClick={this.pageClick.bind(this, i)}\n                               className={currentPage === i ? \"activePage\" : null}>{i}</li>)\n            }\n        } else {\n            /*总页码大于10时，部分显示*/\n\n            //第一页\n            pages.push(<li className={currentPage === 1 ? \"activePage\" : null} key={1}\n                           onClick={this.pageClick.bind(this, 1)}>1</li>)\n\n            let pageLength = 0;\n            if (groupCount + startPage > totalPage) {\n                pageLength = totalPage\n            } else {\n                pageLength = groupCount + startPage;\n            }\n            //前面省略号(当当前页码比分组的页码大时显示省略号)\n            if (currentPage >= groupCount) {\n                pages.push(<li className=\"\" key={-1}>···</li>)\n            }\n            //非第一页和最后一页显示\n            for (let i = startPage; i < pageLength; i++) {\n                if (i <= totalPage - 1 && i > 1) {\n                    pages.push(<li className={currentPage === i ? \"activePage\" : null} key={i}\n                                   onClick={this.pageClick.bind(this, i)}>{i}</li>)\n                }\n            }\n            //后面省略号\n            if (totalPage - startPage >= groupCount + 1) {\n                pages.push(<li className=\"\" key={-2}>···</li>)\n            }\n            //最后一页\n            pages.push(<li className={currentPage === totalPage ? \"activePage\" : null} key={totalPage}\n                           onClick={this.pageClick.bind(this, totalPage)}>{totalPage}</li>)\n        }\n        //下一页\n        pages.push(<li className={currentPage === totalPage ? \"nomore\" : null}\n                       onClick={this.nextPageHandeler.bind(this)}\n                       key={totalPage + 1}>下一页</li>)\n        return pages;\n\n    }\n\n    //页码点击\n    pageClick(currentPage) {\n        const {groupCount} = this.state\n        const getCurrentPage = this.props.pageCallbackFn;\n        //当 当前页码 大于 分组的页码 时，使 当前页 前面 显示 两个页码\n        if (currentPage >= groupCount) {\n            this.setState({\n                startPage: currentPage - 2,\n            })\n        }\n        if (currentPage < groupCount) {\n            this.setState({\n                startPage: 1,\n            })\n        }\n        //第一页时重新设置分组的起始页\n        if (currentPage === 1) {\n            this.setState({\n                startPage: 1,\n            })\n        }\n        this.setState({\n            currentPage\n        })\n        //将当前页码返回父组件\n        getCurrentPage(currentPage)\n    }\n\n    //上一页事件\n    prePageHandeler() {\n        let {currentPage} = this.state\n        if (--currentPage === 0) {\n            return false\n        }\n        this.pageClick(currentPage)\n    }\n\n    //下一页事件\n    nextPageHandeler() {\n        let {currentPage,totalPage} = this.state\n       // const {totalPage} = this.props.pageConfig;\n        if (++currentPage > totalPage) {\n            return false\n        }\n        this.pageClick(currentPage)\n    }\n    render() {\n        const pageList = this.createPage();\n        return (\n            <ul className=\"page-container\">\n                {pageList}\n            </ul>\n        )\n    }\n}\n\nexport default Pagecomponent","/**\n * Created By Shuang On 2019/12/25\n */\nimport React, {Component} from 'react'\nimport Pagecomponent from '../components/pagecomponent'\nimport data from '../file.json'\nimport profile from '../profile.json'\n\nconst JsonTable = require('ts-react-json-table');\n\nclass Pagecontainer extends Component {\n    constructor() {\n        super()\n        this.state = {\n\t\t\tnumber: 1,\n            dataList:[],\n            pageConfig: {\n                totalPage: Math.round(data.length / 100)\n            }\n        }\n        this.getCurrentPage = this.getCurrentPage.bind(this)\n    }\n    getCurrentPage(currentPage) {\n        this.setState({\n\t\t\tnumber: currentPage\n\t\t})\n    }\n    render() {\n        let lists = [];\n        for(let i=100 * (this.state.number - 1);i<100 * (this.state.number);i++){\n\t\t\ttry{\n\t\t\t\tvar obj = data[i]\n\t\t\t\tlists.push(obj)\n\t\t\t}\n\t\t\tcatch(e){\n\t\t\t\tconsole.log('error', e);        \n\t\t\t}\n\t\t}\n        return (\n            <div>\n\t\t\t\t<JsonTable rows = {lists} />\n                <div>\n                    更新日期: {profile[0].time}\n                </div>\n                <Pagecomponent pageConfig={this.state.pageConfig}\n                               pageCallbackFn={this.getCurrentPage}/>\n            </div>\n        )\n    }\n}\nexport default Pagecontainer","import React, { Component } from 'react';\r\n\r\nfunction search(term){\r\n    return function(x){\r\n      return x.title.toLowerCase().includes(term.toLowerCase()) || !term;   //The includes() method determines whether a string contains the characters of a specified string.\r\n   \r\n        \r\n    }\r\n}\r\n\r\nexport default search;","import React, { Component } from 'react';\r\nimport post from '../data/post.json';\r\nimport search from './SearchComponent';\r\n\r\nclass PostList extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            post:post,\r\n            term:''\r\n        }\r\n        this.searchHandler = this.searchHandler.bind(this);\r\n    }\r\n\r\n    searchHandler(event){\r\n        this.setState({term : event.target.value})  //outputs watever the input is inputted\r\n    }\r\n\r\n    render() {\r\n        const{term, post} = this.state;  //destructuring\r\n        return(\r\n            <div>\r\n                <form>\r\n                    <input type = \"text\" onChange = {this.searchHandler} value = {term}/>\r\n                </form>\r\n                <h1>Hello, here is the JSON Data</h1>\r\n                <div>\r\n                               <table border =\"1\">\r\n                                   <tr>\r\n                                       <th>userId</th>\r\n                                       <th>id</th>\r\n                                       <th>Title</th>\r\n                                       <th>Body</th>\r\n                                   </tr>\r\n\r\n                {/* {this.state.post.filter(search(this.state.term)).map((postDetail) =>{ */}\r\n                {post.filter(search(this.state.term)).map((postDetail) =>{\r\n                    return(\r\n                        \r\n                           <tr>\r\n                               <td>{postDetail.userId}</td>\r\n                               <td>{postDetail.id}</td>\r\n                               <td>{postDetail.title}</td>\r\n                               <td>{postDetail.body}</td>\r\n                           </tr>\r\n                              \r\n                            \r\n                    )\r\n                })}\r\n                 </table>\r\n                               </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PostList;\r\n\r\n","import React, {Component} from 'react';\nimport PostList from './posts/PostList';\nimport logo from './logo.svg';\nimport './App.css';\nimport search from './posts/SearchComponent';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n      {/* <form>\n        <input type = \"text\"/>\n      </form> */}\n      <PostList/>\n    </div>\n    )\n  }\n}\n\nexport default App;","import React, { Component } from 'react';\n// import Chart from '../Chart/Chart';\nimport ReactTable from \"react-table\";\n// import \"react-table/react-table.css\";\n\nclass StockList extends Component {\n  constructor() {\n    super();\n    this.state = {\n      timeRange: 14,\n      country: '',\n      coutryFlag: {},\n      networks: {\n        facebook: true,\n        flurry: true,\n        admob: true,\n        marketPlace: true\n      },\n      platform: '',\n      adType: '',\n      chartType: 'adsAnalysis',\n      alertData: [],\n      chartData: [],\n      selected: -1,\n      done: [],\n      predictValue: {\n        admob: {\n          fittedvalues: 0\n        },\n        fan: {\n          fittedvalues: 0\n        },\n        flurry: {\n          fittedvalues: 0\n        },\n        marketplace: {\n          fittedvalues: 0\n        }\n      }\n    }\n  }\n\n  componentDidMount() {\n    // this.fetchCountryFlag();\n    this.fetchAlertData();\n  }\n\n  fetchAlertData() {\n    fetch(`https://analytics1.my-alfred.com/api/ads-alert/?token=${window.googleToken}`)\n      .then(res => res.json())\n      .then(data => {\n        if (data.status === false && data.authStatus === false) {\n          window.googleToken = window.gapi.auth2.getAuthInstance().currentUser.get().getAuthResponse().id_token;\n          this.fetchAlertData();\n          return;\n        }\n        this.setState({\n          alertData: data\n        });\n      });\n  }\n\n  // fetchCountryFlag() {\n  //   const cache = window.cacheData.adsAnalysisCountryFlag;\n  //   if (cache) {\n  //     this.setState({\n  //       coutryFlag: cache\n  //     })\n  //   } else {\n  //     fetch(`https://analytics1.my-alfred.com/api/adsData/mopub/countryFlag?token=${window.googleToken}`)\n  //       .then(res => res.json())\n  //       .then(data => {\n  //         if (data.status === false && data.authStatus === false) {\n  //           window.googleToken = window.gapi.auth2.getAuthInstance().currentUser.get().getAuthResponse().id_token;\n  //           this.fetchCountryFlag();\n  //           return;\n  //         }\n  //         window.cacheData.adsAnalysisCountryFlag = data;\n  //         this.setState({\n  //           coutryFlag: data\n  //         });\n  //       });\n  //   }\n  // }\n\n  // fetchChartData({ country, platform, adType, timeRange, selected, predictValue }) {\n  //   let url = `https://analytics1.my-alfred.com/api/adsData/mopub/${country}/${platform}/${adType}?timeRange=${timeRange}&token=${window.googleToken}`;\n  //   if (this.props.old) {\n  //     url = `https://analytics1.my-alfred.com/api/adsData/mopub-old/${country}/${platform}/${adType}?timeRange=${timeRange}&token=${window.googleToken}`\n  //   }\n  //   fetch(url)\n  //     .then(res => res.json())\n  //     .then(data => {\n  //       if (data.status === false && data.authStatus === false) {\n  //         window.googleToken = window.gapi.auth2.getAuthInstance().currentUser.get().getAuthResponse().id_token;\n  //         this.fetchChartData({ country, platform, adType, timeRange, selected, predictValue });\n  //         return;\n  //       }\n  //       this.setState({\n  //         country: country,\n  //         platform: platform,\n  //         adType: adType,\n  //         timeRange: timeRange,\n  //         chartData: data,\n  //         selected: selected,\n  //         predictValue: predictValue\n  //       });\n  //     });\n  // }\n\n  toggleLine(key) {\n    const { networks } = this.state\n    networks[key] = !networks[key];\n    this.setState({\n      networks: networks\n    })\n  }\n\n  render() {\n    const { alertData, chartData, timeRange, chartType, selected, predictValue } = this.state;\n\n    const chartHeight = 400;\n\n    const adjustPredictLine = (chartData) => {\n      const length = chartData.length;\n      if (length === 0) {\n        return [];\n      }\n\n      let data = [...chartData];\n      data.map((ele, index) => {\n        ele.network.admob.fittedvalues = index === data.length - 1 ? ele.network.admob.eCPM : undefined;\n        ele.network.fan.fittedvalues = index === data.length - 1 ? ele.network.fan.eCPM : undefined;\n        ele.network.flurry.fittedvalues = index === data.length - 1 ? ele.network.flurry.eCPM : undefined;\n        ele.network.marketplace.fittedvalues = index === data.length - 1 ? ele.network.marketplace.eCPM : undefined;\n        return ele;\n      });\n      const predictDate = new Date(data[length - 1].date);\n      predictDate.setDate(predictDate.getDate() + 1);\n      data.push({\n        date: `${predictDate.getFullYear()}/${predictDate.getMonth() + 1}/${predictDate.getDate()}`,\n        network: predictValue\n      });\n\n      return data;\n    }\n\n    return (\n      <div\n        className=\"AdsAnalysis\"\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          maxHeight: window.innerHeight * 0.9\n        }}\n      >\n        {/* <div className=\"AdsAnalysisContent\">\n          <Chart data={adjustPredictLine(chartData)}\n            facebook={this.state.networks.facebook}\n            flurry={this.state.networks.flurry}\n            admob={this.state.networks.admob}\n            marketPlace={this.state.networks.marketPlace}\n            revenue={this.props.revenue || this.state.revenue}\n            type={chartType}\n            timeRange={timeRange}\n            predictLine={true}\n            width={this.props.width}\n            height={this.props.height || chartHeight}\n            toggleLine={key => { this.toggleLine(key); }}\n          />\n        </div> */}\n        {\n          !this.props.hideTable && (\n            <div className=\"AdsAnalysisContent\">\n              <ReactTable\n                style={{\n                  width: '90%',\n                  height: '300px'\n                }}\n                showPagination={false}\n                showPageSizeOptions={false}\n                data={[...alertData]}\n                columns={[\n                  {\n                    Header: '',\n                    columns: [{\n                      Header: '',\n                      id: 'exchange_alert',\n                      accessor: acc => acc.exchange_alert,\n                      Cell: props => <span>{props.value && <i className=\"material-icons\" style={{ color: '#cb1b45', fontSize: '16px' }}>priority_high</i>}</span>,\n                      minWidth: 20,\n                      filterMethod: (filter, row) => {\n                        if (filter.value) {\n                          return true;\n                        }\n                        return row[filter.id];\n                      },\n                      Filter: ({ filter, onChange }) => {\n                        if (!filter) {\n                          return <i className=\"material-icons\" onClick={event => onChange(false)} style={{ cursor: 'pointer', fontSize: '20px' }} >star_border</i>;\n                        } else {\n                          return filter.value ? <i className=\"material-icons\" onClick={event => onChange(false)} style={{ cursor: 'pointer', fontSize: '20px' }} >star_border</i> : <i className=\"material-icons\" style={{ color: '#ffce31', cursor: 'pointer', fontSize: '20px' }} onClick={event => onChange(true)} >star</i>\n                        }\n                      }\n                    }],\n                  },\n                  {\n                    Header: 'Country',\n                    columns: [{\n                      id: 'country',\n                      Header: 'Country',\n                      accessor: acc => acc,\n                      Cell: props => <span>{this.state.coutryFlag[props.value.country]} <a href={props.value.mopub_link} target=\"blank\">{props.value.country.toUpperCase()}</a></span>,\n                      filterMethod: (filter, row) => {\n                        return row[filter.id].country.toLowerCase().indexOf(filter.value.toLowerCase()) !== -1;\n                      },\n                      minWidth: 80\n                    }]\n                  },\n                  {\n                    Header: 'Platform',\n                    columns: [{\n                      Header: 'Platform',\n                      accessor: 'platform',\n                      Cell: props => <span>{props.value.toUpperCase()}</span>,\n                      filterMethod: (filter, row) => {\n                        if (filter.value === \"all\") {\n                          return true;\n                        }\n                        return row[filter.id] === filter.value;\n                      },\n                      Filter: ({ filter, onChange }) =>\n                        <select\n                          onChange={event => onChange(event.target.value)}\n                          style={{ width: \"100%\" }}\n                          value={filter ? filter.value : \"all\"}\n                        >\n                          <option value=\"all\">Show All</option>\n                          <option value=\"android\">Android</option>\n                          <option value=\"ios\">iOS</option>\n                        </select>,\n                      minWidth: 80\n                    }]\n                  },\n                  {\n                    Header: 'Unit',\n                    columns: [{\n                      Header: 'Unit',\n                      accessor: 'unit',\n                      Cell: props => <span>{this.state.coutryFlag[props.value]} {props.value.toUpperCase()}</span>,\n                      filterMethod: (filter, row) => {\n                        if (filter.value === \"all\") {\n                          return true;\n                        }\n                        return row[filter.id] === filter.value;\n                      },\n                      Filter: ({ filter, onChange }) =>\n                        <select\n                          onChange={event => onChange(event.target.value)}\n                          style={{ width: \"100%\" }}\n                          value={filter ? filter.value : \"all\"}\n                        >\n                          <option value=\"all\">Show All</option>\n                          <option value=\"banner\">Banner</option>\n                          <option value=\"banner_native\">Banner Native</option>\n                          <option value=\"eventbook_bottom\">Eventbook Bottom</option>\n                          <option value=\"eventbook\">Eventbook</option>\n                          <option value=\"list\">List</option>\n                          <option value=\"rect2\">Rect2</option>\n                          <option value=\"rect\">Rect</option>\n                        </select>,\n                      minWidth: 50\n                    }],\n                  },\n                  {\n                    Header: 'Networks',\n                    columns: [{\n                      id: 'admob',\n                      Header: props => <span style={{ color: '#bf3d31' }}>AdMob</span>,\n                      accessor: d => d.network.admob,\n                      filterable: false,\n                      Cell: props => (\n                        <span\n                          title={props.value && props.value.highlight ? props.value.reason : ''}\n                          style={{\n                            border: props.value && props.value.highlight ? '1px solid #cb1b45' : 'none'\n                          }}\n                        >\n                          {props.value && props.value.show ? `$${props.value.prime_data} -> $${props.value.suggest_data.toFixed(2)} (${props.value.gap >= 0 ? '+' + props.value.gap.toFixed(2) : props.value.gap.toFixed(2)})` : '-'}\n                        </span>\n                      )\n                    }, {\n                      id: 'facebook',\n                      Header: props => <span style={{ color: '#3b5998' }}>Facebook</span>,\n                      accessor: d => d.network.fan,\n                      filterable: false,\n                      Cell: props => (\n                        <span\n                          title={props.value && props.value.highlight ? props.value.reason : ''}\n                          style={{\n                            border: props.value && props.value.highlight ? '1px solid #cb1b45' : 'none'\n                          }}\n                        >\n                          {props.value && props.value.show ? `$${props.value.prime_data} -> $${props.value.suggest_data.toFixed(2)} (${props.value.gap >= 0 ? '+' + props.value.gap.toFixed(2) : props.value.gap.toFixed(2)})` : '-'}\n                        </span>\n                      )\n                    }, {\n                      id: 'flurry',\n                      Header: props => <span style={{ color: '#82ca9d' }}>Flurry</span>,\n                      accessor: d => d.network.flurry,\n                      filterable: false,\n                      Cell: props => (\n                        <span\n                          title={props.value && props.value.highlight ? props.value.reason : ''}\n                          style={{\n                            border: props.value && props.value.highlight ? '1px solid #cb1b45' : 'none'\n                          }}\n                        >\n                          {props.value && props.value.show ? `$${props.value.prime_data} -> $${props.value.suggest_data.toFixed(2)} (${props.value.gap >= 0 ? '+' + props.value.gap.toFixed(2) : props.value.gap.toFixed(2)})` : '-'}\n                        </span>\n                      )\n                    }]\n                  },\n                  {\n                    Header: 'Exchange Days',\n                    columns: [{\n                      Header: 'Exchange Days',\n                      accessor: 'exchange_days',\n                      Cell: props => <span>{props.value || '-'}</span>,\n                      minWidth: 80,\n                      filterable: false,\n                    }]\n                  }\n                ]}\n                className=\"-striped -highlight\"\n                pageSize={[...alertData].length}\n                defaultPageSize={30}\n                sortable={false}\n                filterable={true}\n                getTdProps={(state, rowInfo, column, instance) => {\n                  return {\n                    onClick: (e, handleOriginal) => {\n                      if (column.Header === '' || selected === rowInfo.index) {\n                        return;\n                      }\n                      this.fetchChartData({\n                        country: rowInfo.original.country,\n                        platform: rowInfo.original.platform,\n                        adType: rowInfo.original.unit,\n                        timeRange: timeRange,\n                        selected: rowInfo.index,\n                        predictValue: {\n                          admob: {\n                            eCPM: undefined,\n                            fittedvalues: rowInfo.original.network.admob ? rowInfo.original.network.admob.suggest_data : undefined\n                          },\n                          fan: {\n                            eCPM: undefined,\n                            fittedvalues: rowInfo.original.network.fan ? rowInfo.original.network.fan.suggest_data : undefined\n                          },\n                          flurry: {\n                            eCPM: undefined,\n                            fittedvalues: rowInfo.original.network.flurry ? rowInfo.original.network.flurry.suggest_data : undefined\n                          },\n                          marketplace: {\n                            eCPM: undefined,\n                            fittedvalues: rowInfo.original.network.marketplace ? rowInfo.original.network.marketplace.suggest_data : undefined\n                          }\n                        }\n                      });\n                    }\n                  }\n                }}\n                getTrProps={(state, rowInfo, column) => {\n                  return {\n                    style: {\n                      textDecoration: rowInfo && this.state.done.indexOf(rowInfo.index) !== -1 ? 'line-through' : 'none',\n                      color: rowInfo && rowInfo.index === selected ? '#4285f4' : '#000',\n                    }\n                  }\n                }}\n              />\n            </div>\n          )\n        }\n      </div>\n    );\n  }\n}\nexport default StockList;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Main from './containers/pagecontainer';\nimport App from './App';\nimport StockList from './StockList/StockList';\n\n\nconst JsonTable = require('ts-react-json-table');\n// var items = [\n// \t{\"id\": 75950,\"name\": \"Louella Wallace\",\"age\": 24,\"phone\": \"+44 (0)203 437 7302\",\"color\": \"green\"},\n// \t{\"id\": 80616,\"name\": \"Hanson Perry\",\"age\": 36,\"phone\": \"+44 (0)203 279 3708\",\"color\": \"brown\"},\n// \t{\"id\": 77621,\"name\": \"Brandi Long\",\"age\": 20,\"phone\": \"+44 (0)203 319 4880\",\"color\": \"gray\"},\n// \t{\"id\": 81299,\"name\": \"Tonia Sykes\",\"age\": 38,\"phone\": \"+44 (0)208 328 3671\",\"color\": \"blue\"},\n// \t{\"id\": 14225,\"name\": \"Leach Durham\",\"age\": 23,\"phone\": \"+44 (0)208 280 9572\",\"color\": \"green\"}\n//   ];\n  \nlet admins = require('./file.json');\n// console.log(admins);\n\n// ReactDOM.render(<Main />, document.getElementById('root'));\n\n// ReactDOM.render(<App />, document.getElementById('root'));\nReactDOM.render(<StockList />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}